"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/lib/mockApi.ts":
/*!****************************!*\
  !*** ./src/lib/mockApi.ts ***!
  \****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mockDeleteNotification: function() { return /* binding */ mockDeleteNotification; },\n/* harmony export */   mockFetchNotifications: function() { return /* binding */ mockFetchNotifications; },\n/* harmony export */   mockMarkAllAsRead: function() { return /* binding */ mockMarkAllAsRead; },\n/* harmony export */   mockMarkAsRead: function() { return /* binding */ mockMarkAsRead; }\n/* harmony export */ });\nconst mockNotifications = [\n    {\n        id: \"1\",\n        title: \"Welcome to the app\",\n        message: \"Thanks for trying out our notification system!\",\n        timestamp: new Date(Date.now() - 5 * 60 * 1000),\n        read: false,\n        type: \"info\"\n    },\n    {\n        id: \"2\",\n        title: \"New feature available\",\n        message: \"Check out our new dashboard features.\",\n        timestamp: new Date(Date.now() - 60 * 60 * 1000),\n        read: true,\n        type: \"info\"\n    },\n    {\n        id: \"3\",\n        title: \"Action required\",\n        message: \"Please verify your email address.\",\n        timestamp: new Date(Date.now() - 2 * 60 * 60 * 1000),\n        read: false,\n        type: \"warning\"\n    },\n    {\n        id: \"4\",\n        title: \"Payment successful\",\n        message: \"Your subscription has been renewed.\",\n        timestamp: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000),\n        read: true,\n        type: \"success\"\n    },\n    {\n        id: \"5\",\n        title: \"Login attempt\",\n        message: \"A new login was detected from an unknown device.\",\n        timestamp: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000),\n        read: false,\n        type: \"error\"\n    }\n];\n// In-memory store for our mock data\nlet notifications = [\n    ...mockNotifications\n];\n// Mock API functions\nasync function mockFetchNotifications() {\n    // Simulate network delay\n    await new Promise((resolve)=>setTimeout(resolve, 500));\n    // Simulate occasional errors (1 in 10 chance)\n    if (Math.random() < 0.1) {\n        throw new Error(\"Failed to fetch notifications\");\n    }\n    return [\n        ...notifications\n    ];\n}\nasync function mockMarkAsRead(id) {\n    // Simulate network delay\n    await new Promise((resolve)=>setTimeout(resolve, 300));\n    // Update the notification\n    notifications = notifications.map((notification)=>notification.id === id ? {\n            ...notification,\n            read: true\n        } : notification);\n}\nasync function mockMarkAllAsRead() {\n    // Simulate network delay\n    await new Promise((resolve)=>setTimeout(resolve, 300));\n    // Mark all as read\n    notifications = notifications.map((notification)=>({\n            ...notification,\n            read: true\n        }));\n}\nasync function mockDeleteNotification(id) {\n    // Simulate network delay\n    await new Promise((resolve)=>setTimeout(resolve, 300));\n    // Delete the notification\n    notifications = notifications.filter((notification)=>notification.id !== id);\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9saWIvbW9ja0FwaS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBRUEsTUFBTUEsb0JBQW9DO0lBQ3hDO1FBQ0VDLElBQUk7UUFDSkMsT0FBTztRQUNQQyxTQUFTO1FBQ1RDLFdBQVcsSUFBSUMsS0FBS0EsS0FBS0MsR0FBRyxLQUFLLElBQUksS0FBSztRQUMxQ0MsTUFBTTtRQUNOQyxNQUFNO0lBQ1I7SUFDQTtRQUNFUCxJQUFJO1FBQ0pDLE9BQU87UUFDUEMsU0FBUztRQUNUQyxXQUFXLElBQUlDLEtBQUtBLEtBQUtDLEdBQUcsS0FBSyxLQUFLLEtBQUs7UUFDM0NDLE1BQU07UUFDTkMsTUFBTTtJQUNSO0lBQ0E7UUFDRVAsSUFBSTtRQUNKQyxPQUFPO1FBQ1BDLFNBQVM7UUFDVEMsV0FBVyxJQUFJQyxLQUFLQSxLQUFLQyxHQUFHLEtBQUssSUFBSSxLQUFLLEtBQUs7UUFDL0NDLE1BQU07UUFDTkMsTUFBTTtJQUNSO0lBQ0E7UUFDRVAsSUFBSTtRQUNKQyxPQUFPO1FBQ1BDLFNBQVM7UUFDVEMsV0FBVyxJQUFJQyxLQUFLQSxLQUFLQyxHQUFHLEtBQUssSUFBSSxLQUFLLEtBQUssS0FBSztRQUNwREMsTUFBTTtRQUNOQyxNQUFNO0lBQ1I7SUFDQTtRQUNFUCxJQUFJO1FBQ0pDLE9BQU87UUFDUEMsU0FBUztRQUNUQyxXQUFXLElBQUlDLEtBQUtBLEtBQUtDLEdBQUcsS0FBSyxJQUFJLEtBQUssS0FBSyxLQUFLO1FBQ3BEQyxNQUFNO1FBQ05DLE1BQU07SUFDUjtDQUNEO0FBRUQsb0NBQW9DO0FBQ3BDLElBQUlDLGdCQUFnQjtPQUFJVDtDQUFrQjtBQUUxQyxxQkFBcUI7QUFDZCxlQUFlVTtJQUNwQix5QkFBeUI7SUFDekIsTUFBTSxJQUFJQyxRQUFRLENBQUNDLFVBQVlDLFdBQVdELFNBQVM7SUFFbkQsOENBQThDO0lBQzlDLElBQUlFLEtBQUtDLE1BQU0sS0FBSyxLQUFLO1FBQ3ZCLE1BQU0sSUFBSUMsTUFBTTtJQUNsQjtJQUVBLE9BQU87V0FBSVA7S0FBYztBQUMzQjtBQUVPLGVBQWVRLGVBQWVoQixFQUFVO0lBQzdDLHlCQUF5QjtJQUN6QixNQUFNLElBQUlVLFFBQVEsQ0FBQ0MsVUFBWUMsV0FBV0QsU0FBUztJQUVuRCwwQkFBMEI7SUFDMUJILGdCQUFnQkEsY0FBY1MsR0FBRyxDQUFDLENBQUNDLGVBQ2pDQSxhQUFhbEIsRUFBRSxLQUFLQSxLQUFLO1lBQUUsR0FBR2tCLFlBQVk7WUFBRVosTUFBTTtRQUFLLElBQUlZO0FBRS9EO0FBRU8sZUFBZUM7SUFDcEIseUJBQXlCO0lBQ3pCLE1BQU0sSUFBSVQsUUFBUSxDQUFDQyxVQUFZQyxXQUFXRCxTQUFTO0lBRW5ELG1CQUFtQjtJQUNuQkgsZ0JBQWdCQSxjQUFjUyxHQUFHLENBQUMsQ0FBQ0MsZUFBa0I7WUFBRSxHQUFHQSxZQUFZO1lBQUVaLE1BQU07UUFBSztBQUNyRjtBQUVPLGVBQWVjLHVCQUF1QnBCLEVBQVU7SUFDckQseUJBQXlCO0lBQ3pCLE1BQU0sSUFBSVUsUUFBUSxDQUFDQyxVQUFZQyxXQUFXRCxTQUFTO0lBRW5ELDBCQUEwQjtJQUMxQkgsZ0JBQWdCQSxjQUFjYSxNQUFNLENBQUMsQ0FBQ0gsZUFBaUJBLGFBQWFsQixFQUFFLEtBQUtBO0FBQzdFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9saWIvbW9ja0FwaS50cz8xMDQ4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHsgTm90aWZpY2F0aW9uIH0gZnJvbSBcInJlYWN0LW5vdGlmaWNhdGlvbi1jb3JlXCJcblxuY29uc3QgbW9ja05vdGlmaWNhdGlvbnM6IE5vdGlmaWNhdGlvbltdID0gW1xuICB7XG4gICAgaWQ6IFwiMVwiLFxuICAgIHRpdGxlOiBcIldlbGNvbWUgdG8gdGhlIGFwcFwiLFxuICAgIG1lc3NhZ2U6IFwiVGhhbmtzIGZvciB0cnlpbmcgb3V0IG91ciBub3RpZmljYXRpb24gc3lzdGVtIVwiLFxuICAgIHRpbWVzdGFtcDogbmV3IERhdGUoRGF0ZS5ub3coKSAtIDUgKiA2MCAqIDEwMDApLCAvLyA1IG1pbnV0ZXMgYWdvXG4gICAgcmVhZDogZmFsc2UsXG4gICAgdHlwZTogXCJpbmZvXCIsXG4gIH0sXG4gIHtcbiAgICBpZDogXCIyXCIsXG4gICAgdGl0bGU6IFwiTmV3IGZlYXR1cmUgYXZhaWxhYmxlXCIsXG4gICAgbWVzc2FnZTogXCJDaGVjayBvdXQgb3VyIG5ldyBkYXNoYm9hcmQgZmVhdHVyZXMuXCIsXG4gICAgdGltZXN0YW1wOiBuZXcgRGF0ZShEYXRlLm5vdygpIC0gNjAgKiA2MCAqIDEwMDApLCAvLyAxIGhvdXIgYWdvXG4gICAgcmVhZDogdHJ1ZSxcbiAgICB0eXBlOiBcImluZm9cIixcbiAgfSxcbiAge1xuICAgIGlkOiBcIjNcIixcbiAgICB0aXRsZTogXCJBY3Rpb24gcmVxdWlyZWRcIixcbiAgICBtZXNzYWdlOiBcIlBsZWFzZSB2ZXJpZnkgeW91ciBlbWFpbCBhZGRyZXNzLlwiLFxuICAgIHRpbWVzdGFtcDogbmV3IERhdGUoRGF0ZS5ub3coKSAtIDIgKiA2MCAqIDYwICogMTAwMCksIC8vIDIgaG91cnMgYWdvXG4gICAgcmVhZDogZmFsc2UsXG4gICAgdHlwZTogXCJ3YXJuaW5nXCIsXG4gIH0sXG4gIHtcbiAgICBpZDogXCI0XCIsXG4gICAgdGl0bGU6IFwiUGF5bWVudCBzdWNjZXNzZnVsXCIsXG4gICAgbWVzc2FnZTogXCJZb3VyIHN1YnNjcmlwdGlvbiBoYXMgYmVlbiByZW5ld2VkLlwiLFxuICAgIHRpbWVzdGFtcDogbmV3IERhdGUoRGF0ZS5ub3coKSAtIDEgKiAyNCAqIDYwICogNjAgKiAxMDAwKSwgLy8gMSBkYXkgYWdvXG4gICAgcmVhZDogdHJ1ZSxcbiAgICB0eXBlOiBcInN1Y2Nlc3NcIixcbiAgfSxcbiAge1xuICAgIGlkOiBcIjVcIixcbiAgICB0aXRsZTogXCJMb2dpbiBhdHRlbXB0XCIsXG4gICAgbWVzc2FnZTogXCJBIG5ldyBsb2dpbiB3YXMgZGV0ZWN0ZWQgZnJvbSBhbiB1bmtub3duIGRldmljZS5cIixcbiAgICB0aW1lc3RhbXA6IG5ldyBEYXRlKERhdGUubm93KCkgLSAyICogMjQgKiA2MCAqIDYwICogMTAwMCksIC8vIDIgZGF5cyBhZ29cbiAgICByZWFkOiBmYWxzZSxcbiAgICB0eXBlOiBcImVycm9yXCIsXG4gIH0sXG5dXG5cbi8vIEluLW1lbW9yeSBzdG9yZSBmb3Igb3VyIG1vY2sgZGF0YVxubGV0IG5vdGlmaWNhdGlvbnMgPSBbLi4ubW9ja05vdGlmaWNhdGlvbnNdXG5cbi8vIE1vY2sgQVBJIGZ1bmN0aW9uc1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1vY2tGZXRjaE5vdGlmaWNhdGlvbnMoKTogUHJvbWlzZTxOb3RpZmljYXRpb25bXT4ge1xuICAvLyBTaW11bGF0ZSBuZXR3b3JrIGRlbGF5XG4gIGF3YWl0IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiBzZXRUaW1lb3V0KHJlc29sdmUsIDUwMCkpXG5cbiAgLy8gU2ltdWxhdGUgb2NjYXNpb25hbCBlcnJvcnMgKDEgaW4gMTAgY2hhbmNlKVxuICBpZiAoTWF0aC5yYW5kb20oKSA8IDAuMSkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkZhaWxlZCB0byBmZXRjaCBub3RpZmljYXRpb25zXCIpXG4gIH1cblxuICByZXR1cm4gWy4uLm5vdGlmaWNhdGlvbnNdXG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtb2NrTWFya0FzUmVhZChpZDogc3RyaW5nKTogUHJvbWlzZTx2b2lkPiB7XG4gIC8vIFNpbXVsYXRlIG5ldHdvcmsgZGVsYXlcbiAgYXdhaXQgbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgMzAwKSlcblxuICAvLyBVcGRhdGUgdGhlIG5vdGlmaWNhdGlvblxuICBub3RpZmljYXRpb25zID0gbm90aWZpY2F0aW9ucy5tYXAoKG5vdGlmaWNhdGlvbikgPT5cbiAgICBub3RpZmljYXRpb24uaWQgPT09IGlkID8geyAuLi5ub3RpZmljYXRpb24sIHJlYWQ6IHRydWUgfSA6IG5vdGlmaWNhdGlvbixcbiAgKVxufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbW9ja01hcmtBbGxBc1JlYWQoKTogUHJvbWlzZTx2b2lkPiB7XG4gIC8vIFNpbXVsYXRlIG5ldHdvcmsgZGVsYXlcbiAgYXdhaXQgbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgMzAwKSlcblxuICAvLyBNYXJrIGFsbCBhcyByZWFkXG4gIG5vdGlmaWNhdGlvbnMgPSBub3RpZmljYXRpb25zLm1hcCgobm90aWZpY2F0aW9uKSA9PiAoeyAuLi5ub3RpZmljYXRpb24sIHJlYWQ6IHRydWUgfSkpXG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtb2NrRGVsZXRlTm90aWZpY2F0aW9uKGlkOiBzdHJpbmcpOiBQcm9taXNlPHZvaWQ+IHtcbiAgLy8gU2ltdWxhdGUgbmV0d29yayBkZWxheVxuICBhd2FpdCBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gc2V0VGltZW91dChyZXNvbHZlLCAzMDApKVxuXG4gIC8vIERlbGV0ZSB0aGUgbm90aWZpY2F0aW9uXG4gIG5vdGlmaWNhdGlvbnMgPSBub3RpZmljYXRpb25zLmZpbHRlcigobm90aWZpY2F0aW9uKSA9PiBub3RpZmljYXRpb24uaWQgIT09IGlkKVxufVxuIl0sIm5hbWVzIjpbIm1vY2tOb3RpZmljYXRpb25zIiwiaWQiLCJ0aXRsZSIsIm1lc3NhZ2UiLCJ0aW1lc3RhbXAiLCJEYXRlIiwibm93IiwicmVhZCIsInR5cGUiLCJub3RpZmljYXRpb25zIiwibW9ja0ZldGNoTm90aWZpY2F0aW9ucyIsIlByb21pc2UiLCJyZXNvbHZlIiwic2V0VGltZW91dCIsIk1hdGgiLCJyYW5kb20iLCJFcnJvciIsIm1vY2tNYXJrQXNSZWFkIiwibWFwIiwibm90aWZpY2F0aW9uIiwibW9ja01hcmtBbGxBc1JlYWQiLCJtb2NrRGVsZXRlTm90aWZpY2F0aW9uIiwiZmlsdGVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/mockApi.ts\n"));

/***/ })

});